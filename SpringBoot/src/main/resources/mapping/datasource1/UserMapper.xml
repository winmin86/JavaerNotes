<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.up123.springboot.dao.datasource1.UserDao">
    <resultMap id="BaseResultMap" type="xyz.up123.springboot.domain.User">
        <constructor>
            <idArg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="userName" jdbcType="CHAR" javaType="java.lang.String"/>
            <arg column="name" jdbcType="CHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="CHAR" javaType="java.lang.String"/>
            <arg column="salt" jdbcType="CHAR" javaType="java.lang.String"/>
            <arg column="state" jdbcType="CHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
      uid, userName, name, password, salt, state
    </sql>

    <!--   一对多关联查询  -->
    <resultMap id="userRoleIdMap" type="xyz.up123.springboot.domain.User">
        <id column="uid" property="uid"/>
        <result column="userName" property="userName"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="state" property="state"/>

        <collection property="roles" ofType="xyz.up123.springboot.domain.Role">
            <id column="id" property="id"/>
            <result column="available" property="available"/>
            <result column="description" property="description"/>
            <result column="role" property="role"/>
        </collection>
    </resultMap>

    <select id="selectByPrimaryKey" resultMap="userRoleIdMap" parameterType="java.lang.Integer">
        SELECT
          a.userName,a.name,a.state,b.uid,b.role_id,c.id,c.available,c.description,c.role
        FROM  user a
        INNER JOIN user_role b
        ON  a.uid=b.uid
        INNER JOIN `role` c
        ON b.`role_id`=c.`id`
        WHERE  a.uid = #{uid}
    </select>

    <!--添加记录能够返回主键的关键点在于需要在<insert>标签中添加以下三个属性
    <insert useGeneratedKeys="true" keyProperty="id" keyColumn="id"></insert>。
    useGeneratedKeys：必须设置为true，否则无法获取到主键id。
    keyProperty：设置为POJO对象的主键id属性名称。
    keyColumn：设置为数据库记录的主键id字段名称-->

    <insert id="insert" parameterType="xyz.up123.springboot.domain.User" useGeneratedKeys="true" keyProperty="uid" keyColumn="uid">
        insert into user (userName, name, password,
        salt, state)
        values (#{userName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{password,jdbcType=CHAR},
        #{salt,jdbcType=CHAR}, #{state,jdbcType=CHAR})
    </insert>
</mapper>